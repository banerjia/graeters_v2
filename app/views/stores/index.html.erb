<%
    if @state.nil?
        @Page_Title = "Stores for #{@retailer.name}"
    else
        @Page_Title = "Stores in %s for %s" % [@state.name, @retailer.name]
    end
%>


<table class="table table-striped">
    <thead>
        <tr>
            <th scope="col">Name</th>
            <th scope="col">Address</th>
        </tr>
    </thead>
    <tbody>
    <% @stores.each do |store| %>
        <tr>
            <th scope="row"><%= store['_source']['name'] %></th>
            <td><%= store['_source']['address'] %></td>
        </tr>
    <% end %>
    </tbody>
    <tfoot>
        <tr>
            <td>
                <b>Total Stores:</b> <%= @results_found %>
            </td>
            <td>
                <% 
                # Determine if pagination is needed
                if @pages > 1 
                    # Set default values for pagination bounds
                    pages_lower_bound = 1
                    pages_upper_bound = @pages

                    # The number of pages that are shown in the 
                    # page listing; keep this number an odd number
                    # so that in most case the current page is shown
                    # in the middle of that listing
                    num_of_visible_pages = 5
            
                    # If the number of pages crosses a threshold 
                    # then only show a subset of the pages instead
                    # of the entire list of pages
                    if @pages > num_of_visible_pages 
            
                        page_steps = (num_of_visible_pages/2).to_i

                        if @current_page <= page_steps
                            # If current page near the beginning of the first
                            pages_upper_bound = @current_page + (num_of_visible_pages - @current_page)
                        elsif (@current_page + page_steps) >= @pages
                            # If current is close to the last page
                            pages_lower_bound = @pages - num_of_visible_pages + 1
                        else
                            # If current page is somewhere in the middle
                            pages_lower_bound = @current_page - page_steps
                            pages_upper_bound = @current_page + page_steps
                        end
            
                    end
            %>            
                    <nav aria-label="Pagination navigation">
                        <ul class="pagination">
                        <% if pages_lower_bound > 1 %>
                            <li class="page-item"><%= link_to "First", {page: 1}, {class: "page-link"} %></li>
                        <% end %>
                        <% (pages_lower_bound..pages_upper_bound).each do |page_num| %>
                            <li class="page-item"><%= link_to page_num, {page: page_num}, {class: "page-link"} %></li>
                        <% end %>
                        <% if pages_upper_bound < @pages %>
                            <li class="page-item"><%= link_to "Last", {page: @pages}, {class: "page-link"} %></li>
                        <% end %>
                        </ul>
                    </nav>  
            
            <%  end %>
            </td>
        </tr>
    </tfoot>
</table>

<!--
<% @aggregations.each do |agg_key, agg_results| %>
    <% if agg_results['buckets'].size > 1 && !agg_results['buckets'].nil? %>
        <h2 class="h2"><%= agg_key.titlecase %></h2>
        <ul>
        <% agg_results['buckets'].each do |bucket_kv_pair| %>
            <li>
            <% if agg_key == 'states' 
                state_name, state_code = bucket_kv_pair['key'].split(';')
            %>
    
                <%= link_to_unless_current ("%s (%d)" % [state_name, bucket_kv_pair['doc_count']]), retailer_stores_by_state_path( state_code: state_code) %>
            <% else %>
                <%= "%s (%d)" % [bucket_kv_pair['key'], bucket_kv_pair['doc_count']] %>
            <% end %>
            </li>
        <% end %>
        </ul>
    <% end %>
<% end %>
-->